/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MODES_H
#define _MOCK_MODES_H

#ifndef __STATIC_INLINE
#define __STATIC_INLINE
#else
#undef __STATIC_INLINE
#define __STATIC_INLINE
#endif
#define SUPPRESS_INLINE_IMPLEMENTATION

#include "modes.h"
#undef SUPPRESS_INLINE_IMPLEMENTATION
#undef __STATIC_INLINE
#define __STATIC_INLINE __STATIC_INLINE1

void mock_modes_Init(void);
void mock_modes_Destroy(void);
void mock_modes_Verify(void);




#define cf_cbc_init_Ignore() cf_cbc_init_CMockIgnore()
void cf_cbc_init_CMockIgnore(void);
#define cf_cbc_init_Expect(ctx, prp, prpctx, iv) cf_cbc_init_CMockExpect(__LINE__, ctx, prp, prpctx, iv)
void cf_cbc_init_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, const cf_prp* prp, void* prpctx, const uint8_t* iv);
typedef void (* CMOCK_cf_cbc_init_CALLBACK)(cf_cbc* ctx, const cf_prp* prp, void* prpctx, const uint8_t* iv, int cmock_num_calls);
void cf_cbc_init_StubWithCallback(CMOCK_cf_cbc_init_CALLBACK Callback);
#define cf_cbc_init_ExpectWithArray(ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth, iv, iv_Depth) cf_cbc_init_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth, iv, iv_Depth)
void cf_cbc_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int ctx_Depth, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* iv, int iv_Depth);
#define cf_cbc_init_ReturnThruPtr_ctx(ctx) cf_cbc_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbc_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbc_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbc_init_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbc_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbc_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int cmock_size);
#define cf_cbc_init_ReturnThruPtr_prpctx(prpctx) cf_cbc_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_cbc_init_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_cbc_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_cbc_init_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_cbc_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_cbc_init_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_cbc_init_IgnoreArg_ctx() cf_cbc_init_CMockIgnoreArg_ctx(__LINE__)
void cf_cbc_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_init_IgnoreArg_prp() cf_cbc_init_CMockIgnoreArg_prp(__LINE__)
void cf_cbc_init_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_init_IgnoreArg_prpctx() cf_cbc_init_CMockIgnoreArg_prpctx(__LINE__)
void cf_cbc_init_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_init_IgnoreArg_iv() cf_cbc_init_CMockIgnoreArg_iv(__LINE__)
void cf_cbc_init_CMockIgnoreArg_iv(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_encrypt_Ignore() cf_cbc_encrypt_CMockIgnore()
void cf_cbc_encrypt_CMockIgnore(void);
#define cf_cbc_encrypt_Expect(ctx, input, output, blocks) cf_cbc_encrypt_CMockExpect(__LINE__, ctx, input, output, blocks)
void cf_cbc_encrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, const uint8_t* input, uint8_t* output, size_t blocks);
typedef void (* CMOCK_cf_cbc_encrypt_CALLBACK)(cf_cbc* ctx, const uint8_t* input, uint8_t* output, size_t blocks, int cmock_num_calls);
void cf_cbc_encrypt_StubWithCallback(CMOCK_cf_cbc_encrypt_CALLBACK Callback);
#define cf_cbc_encrypt_ExpectWithArray(ctx, ctx_Depth, input, input_Depth, output, output_Depth, blocks) cf_cbc_encrypt_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, input, input_Depth, output, output_Depth, blocks)
void cf_cbc_encrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int ctx_Depth, uint8_t* input, int input_Depth, uint8_t* output, int output_Depth, size_t blocks);
#define cf_cbc_encrypt_ReturnThruPtr_ctx(ctx) cf_cbc_encrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbc_encrypt_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbc_encrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbc_encrypt_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbc_encrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbc_encrypt_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int cmock_size);
#define cf_cbc_encrypt_ReturnThruPtr_output(output) cf_cbc_encrypt_CMockReturnMemThruPtr_output(__LINE__, output, sizeof(*output))
#define cf_cbc_encrypt_ReturnArrayThruPtr_output(output, cmock_len) cf_cbc_encrypt_CMockReturnMemThruPtr_output(__LINE__, output, cmock_len * sizeof(*output))
#define cf_cbc_encrypt_ReturnMemThruPtr_output(output, cmock_size) cf_cbc_encrypt_CMockReturnMemThruPtr_output(__LINE__, output, cmock_size)
void cf_cbc_encrypt_CMockReturnMemThruPtr_output(UNITY_LINE_TYPE cmock_line, uint8_t* output, int cmock_size);
#define cf_cbc_encrypt_IgnoreArg_ctx() cf_cbc_encrypt_CMockIgnoreArg_ctx(__LINE__)
void cf_cbc_encrypt_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_encrypt_IgnoreArg_input() cf_cbc_encrypt_CMockIgnoreArg_input(__LINE__)
void cf_cbc_encrypt_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_encrypt_IgnoreArg_output() cf_cbc_encrypt_CMockIgnoreArg_output(__LINE__)
void cf_cbc_encrypt_CMockIgnoreArg_output(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_encrypt_IgnoreArg_blocks() cf_cbc_encrypt_CMockIgnoreArg_blocks(__LINE__)
void cf_cbc_encrypt_CMockIgnoreArg_blocks(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_decrypt_Ignore() cf_cbc_decrypt_CMockIgnore()
void cf_cbc_decrypt_CMockIgnore(void);
#define cf_cbc_decrypt_Expect(ctx, input, output, blocks) cf_cbc_decrypt_CMockExpect(__LINE__, ctx, input, output, blocks)
void cf_cbc_decrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, const uint8_t* input, uint8_t* output, size_t blocks);
typedef void (* CMOCK_cf_cbc_decrypt_CALLBACK)(cf_cbc* ctx, const uint8_t* input, uint8_t* output, size_t blocks, int cmock_num_calls);
void cf_cbc_decrypt_StubWithCallback(CMOCK_cf_cbc_decrypt_CALLBACK Callback);
#define cf_cbc_decrypt_ExpectWithArray(ctx, ctx_Depth, input, input_Depth, output, output_Depth, blocks) cf_cbc_decrypt_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, input, input_Depth, output, output_Depth, blocks)
void cf_cbc_decrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int ctx_Depth, uint8_t* input, int input_Depth, uint8_t* output, int output_Depth, size_t blocks);
#define cf_cbc_decrypt_ReturnThruPtr_ctx(ctx) cf_cbc_decrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbc_decrypt_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbc_decrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbc_decrypt_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbc_decrypt_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbc_decrypt_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbc* ctx, int cmock_size);
#define cf_cbc_decrypt_ReturnThruPtr_output(output) cf_cbc_decrypt_CMockReturnMemThruPtr_output(__LINE__, output, sizeof(*output))
#define cf_cbc_decrypt_ReturnArrayThruPtr_output(output, cmock_len) cf_cbc_decrypt_CMockReturnMemThruPtr_output(__LINE__, output, cmock_len * sizeof(*output))
#define cf_cbc_decrypt_ReturnMemThruPtr_output(output, cmock_size) cf_cbc_decrypt_CMockReturnMemThruPtr_output(__LINE__, output, cmock_size)
void cf_cbc_decrypt_CMockReturnMemThruPtr_output(UNITY_LINE_TYPE cmock_line, uint8_t* output, int cmock_size);
#define cf_cbc_decrypt_IgnoreArg_ctx() cf_cbc_decrypt_CMockIgnoreArg_ctx(__LINE__)
void cf_cbc_decrypt_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_decrypt_IgnoreArg_input() cf_cbc_decrypt_CMockIgnoreArg_input(__LINE__)
void cf_cbc_decrypt_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_decrypt_IgnoreArg_output() cf_cbc_decrypt_CMockIgnoreArg_output(__LINE__)
void cf_cbc_decrypt_CMockIgnoreArg_output(UNITY_LINE_TYPE cmock_line);
#define cf_cbc_decrypt_IgnoreArg_blocks() cf_cbc_decrypt_CMockIgnoreArg_blocks(__LINE__)
void cf_cbc_decrypt_CMockIgnoreArg_blocks(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_init_Ignore() cf_ctr_init_CMockIgnore()
void cf_ctr_init_CMockIgnore(void);
#define cf_ctr_init_Expect(ctx, prp, prpctx, nonce) cf_ctr_init_CMockExpect(__LINE__, ctx, prp, prpctx, nonce)
void cf_ctr_init_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, const cf_prp* prp, void* prpctx, const uint8_t* nonce);
typedef void (* CMOCK_cf_ctr_init_CALLBACK)(cf_ctr* ctx, const cf_prp* prp, void* prpctx, const uint8_t* nonce, int cmock_num_calls);
void cf_ctr_init_StubWithCallback(CMOCK_cf_ctr_init_CALLBACK Callback);
#define cf_ctr_init_ExpectWithArray(ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth, nonce, nonce_Depth) cf_ctr_init_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth, nonce, nonce_Depth)
void cf_ctr_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int ctx_Depth, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* nonce, int nonce_Depth);
#define cf_ctr_init_ReturnThruPtr_ctx(ctx) cf_ctr_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_ctr_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_ctr_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_ctr_init_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_ctr_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_ctr_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int cmock_size);
#define cf_ctr_init_ReturnThruPtr_prpctx(prpctx) cf_ctr_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_ctr_init_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_ctr_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_ctr_init_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_ctr_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_ctr_init_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_ctr_init_IgnoreArg_ctx() cf_ctr_init_CMockIgnoreArg_ctx(__LINE__)
void cf_ctr_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_init_IgnoreArg_prp() cf_ctr_init_CMockIgnoreArg_prp(__LINE__)
void cf_ctr_init_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_init_IgnoreArg_prpctx() cf_ctr_init_CMockIgnoreArg_prpctx(__LINE__)
void cf_ctr_init_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_init_IgnoreArg_nonce() cf_ctr_init_CMockIgnoreArg_nonce(__LINE__)
void cf_ctr_init_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_custom_counter_Ignore() cf_ctr_custom_counter_CMockIgnore()
void cf_ctr_custom_counter_CMockIgnore(void);
#define cf_ctr_custom_counter_Expect(ctx, offset, width) cf_ctr_custom_counter_CMockExpect(__LINE__, ctx, offset, width)
void cf_ctr_custom_counter_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, size_t offset, size_t width);
typedef void (* CMOCK_cf_ctr_custom_counter_CALLBACK)(cf_ctr* ctx, size_t offset, size_t width, int cmock_num_calls);
void cf_ctr_custom_counter_StubWithCallback(CMOCK_cf_ctr_custom_counter_CALLBACK Callback);
#define cf_ctr_custom_counter_ExpectWithArray(ctx, ctx_Depth, offset, width) cf_ctr_custom_counter_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, offset, width)
void cf_ctr_custom_counter_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int ctx_Depth, size_t offset, size_t width);
#define cf_ctr_custom_counter_ReturnThruPtr_ctx(ctx) cf_ctr_custom_counter_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_ctr_custom_counter_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_ctr_custom_counter_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_ctr_custom_counter_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_ctr_custom_counter_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_ctr_custom_counter_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int cmock_size);
#define cf_ctr_custom_counter_IgnoreArg_ctx() cf_ctr_custom_counter_CMockIgnoreArg_ctx(__LINE__)
void cf_ctr_custom_counter_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_custom_counter_IgnoreArg_offset() cf_ctr_custom_counter_CMockIgnoreArg_offset(__LINE__)
void cf_ctr_custom_counter_CMockIgnoreArg_offset(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_custom_counter_IgnoreArg_width() cf_ctr_custom_counter_CMockIgnoreArg_width(__LINE__)
void cf_ctr_custom_counter_CMockIgnoreArg_width(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_cipher_Ignore() cf_ctr_cipher_CMockIgnore()
void cf_ctr_cipher_CMockIgnore(void);
#define cf_ctr_cipher_Expect(ctx, input, output, bytes) cf_ctr_cipher_CMockExpect(__LINE__, ctx, input, output, bytes)
void cf_ctr_cipher_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, const uint8_t* input, uint8_t* output, size_t bytes);
typedef void (* CMOCK_cf_ctr_cipher_CALLBACK)(cf_ctr* ctx, const uint8_t* input, uint8_t* output, size_t bytes, int cmock_num_calls);
void cf_ctr_cipher_StubWithCallback(CMOCK_cf_ctr_cipher_CALLBACK Callback);
#define cf_ctr_cipher_ExpectWithArray(ctx, ctx_Depth, input, input_Depth, output, output_Depth, bytes) cf_ctr_cipher_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, input, input_Depth, output, output_Depth, bytes)
void cf_ctr_cipher_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int ctx_Depth, uint8_t* input, int input_Depth, uint8_t* output, int output_Depth, size_t bytes);
#define cf_ctr_cipher_ReturnThruPtr_ctx(ctx) cf_ctr_cipher_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_ctr_cipher_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_ctr_cipher_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_ctr_cipher_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_ctr_cipher_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_ctr_cipher_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int cmock_size);
#define cf_ctr_cipher_ReturnThruPtr_output(output) cf_ctr_cipher_CMockReturnMemThruPtr_output(__LINE__, output, sizeof(*output))
#define cf_ctr_cipher_ReturnArrayThruPtr_output(output, cmock_len) cf_ctr_cipher_CMockReturnMemThruPtr_output(__LINE__, output, cmock_len * sizeof(*output))
#define cf_ctr_cipher_ReturnMemThruPtr_output(output, cmock_size) cf_ctr_cipher_CMockReturnMemThruPtr_output(__LINE__, output, cmock_size)
void cf_ctr_cipher_CMockReturnMemThruPtr_output(UNITY_LINE_TYPE cmock_line, uint8_t* output, int cmock_size);
#define cf_ctr_cipher_IgnoreArg_ctx() cf_ctr_cipher_CMockIgnoreArg_ctx(__LINE__)
void cf_ctr_cipher_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_cipher_IgnoreArg_input() cf_ctr_cipher_CMockIgnoreArg_input(__LINE__)
void cf_ctr_cipher_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_cipher_IgnoreArg_output() cf_ctr_cipher_CMockIgnoreArg_output(__LINE__)
void cf_ctr_cipher_CMockIgnoreArg_output(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_cipher_IgnoreArg_bytes() cf_ctr_cipher_CMockIgnoreArg_bytes(__LINE__)
void cf_ctr_cipher_CMockIgnoreArg_bytes(UNITY_LINE_TYPE cmock_line);
#define cf_ctr_discard_block_Ignore() cf_ctr_discard_block_CMockIgnore()
void cf_ctr_discard_block_CMockIgnore(void);
#define cf_ctr_discard_block_Expect(ctx) cf_ctr_discard_block_CMockExpect(__LINE__, ctx)
void cf_ctr_discard_block_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx);
typedef void (* CMOCK_cf_ctr_discard_block_CALLBACK)(cf_ctr* ctx, int cmock_num_calls);
void cf_ctr_discard_block_StubWithCallback(CMOCK_cf_ctr_discard_block_CALLBACK Callback);
#define cf_ctr_discard_block_ExpectWithArray(ctx, ctx_Depth) cf_ctr_discard_block_CMockExpectWithArray(__LINE__, ctx, ctx_Depth)
void cf_ctr_discard_block_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int ctx_Depth);
#define cf_ctr_discard_block_ReturnThruPtr_ctx(ctx) cf_ctr_discard_block_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_ctr_discard_block_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_ctr_discard_block_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_ctr_discard_block_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_ctr_discard_block_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_ctr_discard_block_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_ctr* ctx, int cmock_size);
#define cf_ctr_discard_block_IgnoreArg_ctx() cf_ctr_discard_block_CMockIgnoreArg_ctx(__LINE__)
void cf_ctr_discard_block_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_init_Ignore() cf_cbcmac_stream_init_CMockIgnore()
void cf_cbcmac_stream_init_CMockIgnore(void);
#define cf_cbcmac_stream_init_Expect(ctx, prp, prpctx) cf_cbcmac_stream_init_CMockExpect(__LINE__, ctx, prp, prpctx)
void cf_cbcmac_stream_init_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, const cf_prp* prp, void* prpctx);
typedef void (* CMOCK_cf_cbcmac_stream_init_CALLBACK)(cf_cbcmac_stream* ctx, const cf_prp* prp, void* prpctx, int cmock_num_calls);
void cf_cbcmac_stream_init_StubWithCallback(CMOCK_cf_cbcmac_stream_init_CALLBACK Callback);
#define cf_cbcmac_stream_init_ExpectWithArray(ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth) cf_cbcmac_stream_init_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth)
void cf_cbcmac_stream_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth);
#define cf_cbcmac_stream_init_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_init_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_init_ReturnThruPtr_prpctx(prpctx) cf_cbcmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_cbcmac_stream_init_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_cbcmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_cbcmac_stream_init_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_cbcmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_cbcmac_stream_init_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_cbcmac_stream_init_IgnoreArg_ctx() cf_cbcmac_stream_init_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_init_IgnoreArg_prp() cf_cbcmac_stream_init_CMockIgnoreArg_prp(__LINE__)
void cf_cbcmac_stream_init_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_init_IgnoreArg_prpctx() cf_cbcmac_stream_init_CMockIgnoreArg_prpctx(__LINE__)
void cf_cbcmac_stream_init_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_reset_Ignore() cf_cbcmac_stream_reset_CMockIgnore()
void cf_cbcmac_stream_reset_CMockIgnore(void);
#define cf_cbcmac_stream_reset_Expect(ctx) cf_cbcmac_stream_reset_CMockExpect(__LINE__, ctx)
void cf_cbcmac_stream_reset_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx);
typedef void (* CMOCK_cf_cbcmac_stream_reset_CALLBACK)(cf_cbcmac_stream* ctx, int cmock_num_calls);
void cf_cbcmac_stream_reset_StubWithCallback(CMOCK_cf_cbcmac_stream_reset_CALLBACK Callback);
#define cf_cbcmac_stream_reset_ExpectWithArray(ctx, ctx_Depth) cf_cbcmac_stream_reset_CMockExpectWithArray(__LINE__, ctx, ctx_Depth)
void cf_cbcmac_stream_reset_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth);
#define cf_cbcmac_stream_reset_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_reset_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_reset_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_reset_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_reset_IgnoreArg_ctx() cf_cbcmac_stream_reset_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_reset_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_update_Ignore() cf_cbcmac_stream_update_CMockIgnore()
void cf_cbcmac_stream_update_CMockIgnore(void);
#define cf_cbcmac_stream_update_Expect(ctx, data, ndata) cf_cbcmac_stream_update_CMockExpect(__LINE__, ctx, data, ndata)
void cf_cbcmac_stream_update_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, const uint8_t* data, size_t ndata);
typedef void (* CMOCK_cf_cbcmac_stream_update_CALLBACK)(cf_cbcmac_stream* ctx, const uint8_t* data, size_t ndata, int cmock_num_calls);
void cf_cbcmac_stream_update_StubWithCallback(CMOCK_cf_cbcmac_stream_update_CALLBACK Callback);
#define cf_cbcmac_stream_update_ExpectWithArray(ctx, ctx_Depth, data, data_Depth, ndata) cf_cbcmac_stream_update_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, data, data_Depth, ndata)
void cf_cbcmac_stream_update_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth, uint8_t* data, int data_Depth, size_t ndata);
#define cf_cbcmac_stream_update_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_update_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_update_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_update_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_update_IgnoreArg_ctx() cf_cbcmac_stream_update_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_update_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_update_IgnoreArg_data() cf_cbcmac_stream_update_CMockIgnoreArg_data(__LINE__)
void cf_cbcmac_stream_update_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_update_IgnoreArg_ndata() cf_cbcmac_stream_update_CMockIgnoreArg_ndata(__LINE__)
void cf_cbcmac_stream_update_CMockIgnoreArg_ndata(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_finish_block_zero_Ignore() cf_cbcmac_stream_finish_block_zero_CMockIgnore()
void cf_cbcmac_stream_finish_block_zero_CMockIgnore(void);
#define cf_cbcmac_stream_finish_block_zero_Expect(ctx) cf_cbcmac_stream_finish_block_zero_CMockExpect(__LINE__, ctx)
void cf_cbcmac_stream_finish_block_zero_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx);
typedef void (* CMOCK_cf_cbcmac_stream_finish_block_zero_CALLBACK)(cf_cbcmac_stream* ctx, int cmock_num_calls);
void cf_cbcmac_stream_finish_block_zero_StubWithCallback(CMOCK_cf_cbcmac_stream_finish_block_zero_CALLBACK Callback);
#define cf_cbcmac_stream_finish_block_zero_ExpectWithArray(ctx, ctx_Depth) cf_cbcmac_stream_finish_block_zero_CMockExpectWithArray(__LINE__, ctx, ctx_Depth)
void cf_cbcmac_stream_finish_block_zero_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth);
#define cf_cbcmac_stream_finish_block_zero_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_finish_block_zero_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_finish_block_zero_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_finish_block_zero_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_finish_block_zero_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_finish_block_zero_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_finish_block_zero_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_finish_block_zero_IgnoreArg_ctx() cf_cbcmac_stream_finish_block_zero_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_finish_block_zero_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_nopad_final_Ignore() cf_cbcmac_stream_nopad_final_CMockIgnore()
void cf_cbcmac_stream_nopad_final_CMockIgnore(void);
#define cf_cbcmac_stream_nopad_final_Expect(ctx, out) cf_cbcmac_stream_nopad_final_CMockExpect(__LINE__, ctx, out)
void cf_cbcmac_stream_nopad_final_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, uint8_t* out);
typedef void (* CMOCK_cf_cbcmac_stream_nopad_final_CALLBACK)(cf_cbcmac_stream* ctx, uint8_t* out, int cmock_num_calls);
void cf_cbcmac_stream_nopad_final_StubWithCallback(CMOCK_cf_cbcmac_stream_nopad_final_CALLBACK Callback);
#define cf_cbcmac_stream_nopad_final_ExpectWithArray(ctx, ctx_Depth, out, out_Depth) cf_cbcmac_stream_nopad_final_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, out, out_Depth)
void cf_cbcmac_stream_nopad_final_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth, uint8_t* out, int out_Depth);
#define cf_cbcmac_stream_nopad_final_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_nopad_final_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_nopad_final_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_nopad_final_ReturnThruPtr_out(out) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_out(__LINE__, out, sizeof(*out))
#define cf_cbcmac_stream_nopad_final_ReturnArrayThruPtr_out(out, cmock_len) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_len * sizeof(*out))
#define cf_cbcmac_stream_nopad_final_ReturnMemThruPtr_out(out, cmock_size) cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_size)
void cf_cbcmac_stream_nopad_final_CMockReturnMemThruPtr_out(UNITY_LINE_TYPE cmock_line, uint8_t* out, int cmock_size);
#define cf_cbcmac_stream_nopad_final_IgnoreArg_ctx() cf_cbcmac_stream_nopad_final_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_nopad_final_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_nopad_final_IgnoreArg_out() cf_cbcmac_stream_nopad_final_CMockIgnoreArg_out(__LINE__)
void cf_cbcmac_stream_nopad_final_CMockIgnoreArg_out(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_pad_final_Ignore() cf_cbcmac_stream_pad_final_CMockIgnore()
void cf_cbcmac_stream_pad_final_CMockIgnore(void);
#define cf_cbcmac_stream_pad_final_Expect(ctx, out) cf_cbcmac_stream_pad_final_CMockExpect(__LINE__, ctx, out)
void cf_cbcmac_stream_pad_final_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, uint8_t* out);
typedef void (* CMOCK_cf_cbcmac_stream_pad_final_CALLBACK)(cf_cbcmac_stream* ctx, uint8_t* out, int cmock_num_calls);
void cf_cbcmac_stream_pad_final_StubWithCallback(CMOCK_cf_cbcmac_stream_pad_final_CALLBACK Callback);
#define cf_cbcmac_stream_pad_final_ExpectWithArray(ctx, ctx_Depth, out, out_Depth) cf_cbcmac_stream_pad_final_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, out, out_Depth)
void cf_cbcmac_stream_pad_final_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int ctx_Depth, uint8_t* out, int out_Depth);
#define cf_cbcmac_stream_pad_final_ReturnThruPtr_ctx(ctx) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cbcmac_stream_pad_final_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cbcmac_stream_pad_final_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cbcmac_stream* ctx, int cmock_size);
#define cf_cbcmac_stream_pad_final_ReturnThruPtr_out(out) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_out(__LINE__, out, sizeof(*out))
#define cf_cbcmac_stream_pad_final_ReturnArrayThruPtr_out(out, cmock_len) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_len * sizeof(*out))
#define cf_cbcmac_stream_pad_final_ReturnMemThruPtr_out(out, cmock_size) cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_size)
void cf_cbcmac_stream_pad_final_CMockReturnMemThruPtr_out(UNITY_LINE_TYPE cmock_line, uint8_t* out, int cmock_size);
#define cf_cbcmac_stream_pad_final_IgnoreArg_ctx() cf_cbcmac_stream_pad_final_CMockIgnoreArg_ctx(__LINE__)
void cf_cbcmac_stream_pad_final_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cbcmac_stream_pad_final_IgnoreArg_out() cf_cbcmac_stream_pad_final_CMockIgnoreArg_out(__LINE__)
void cf_cbcmac_stream_pad_final_CMockIgnoreArg_out(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_init_Ignore() cf_cmac_init_CMockIgnore()
void cf_cmac_init_CMockIgnore(void);
#define cf_cmac_init_Expect(ctx, prp, prpctx) cf_cmac_init_CMockExpect(__LINE__, ctx, prp, prpctx)
void cf_cmac_init_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, const cf_prp* prp, void* prpctx);
typedef void (* CMOCK_cf_cmac_init_CALLBACK)(cf_cmac* ctx, const cf_prp* prp, void* prpctx, int cmock_num_calls);
void cf_cmac_init_StubWithCallback(CMOCK_cf_cmac_init_CALLBACK Callback);
#define cf_cmac_init_ExpectWithArray(ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth) cf_cmac_init_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth)
void cf_cmac_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, int ctx_Depth, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth);
#define cf_cmac_init_ReturnThruPtr_ctx(ctx) cf_cmac_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_init_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, int cmock_size);
#define cf_cmac_init_ReturnThruPtr_prpctx(prpctx) cf_cmac_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_cmac_init_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_cmac_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_cmac_init_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_cmac_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_cmac_init_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_cmac_init_IgnoreArg_ctx() cf_cmac_init_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_init_IgnoreArg_prp() cf_cmac_init_CMockIgnoreArg_prp(__LINE__)
void cf_cmac_init_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_init_IgnoreArg_prpctx() cf_cmac_init_CMockIgnoreArg_prpctx(__LINE__)
void cf_cmac_init_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_sign_Ignore() cf_cmac_sign_CMockIgnore()
void cf_cmac_sign_CMockIgnore(void);
#define cf_cmac_sign_Expect(ctx, data, bytes, out) cf_cmac_sign_CMockExpect(__LINE__, ctx, data, bytes, out)
void cf_cmac_sign_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, const uint8_t* data, size_t bytes, uint8_t* out);
typedef void (* CMOCK_cf_cmac_sign_CALLBACK)(cf_cmac* ctx, const uint8_t* data, size_t bytes, uint8_t* out, int cmock_num_calls);
void cf_cmac_sign_StubWithCallback(CMOCK_cf_cmac_sign_CALLBACK Callback);
#define cf_cmac_sign_ExpectWithArray(ctx, ctx_Depth, data, data_Depth, bytes, out, out_Depth) cf_cmac_sign_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, data, data_Depth, bytes, out, out_Depth)
void cf_cmac_sign_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, int ctx_Depth, uint8_t* data, int data_Depth, size_t bytes, uint8_t* out, int out_Depth);
#define cf_cmac_sign_ReturnThruPtr_ctx(ctx) cf_cmac_sign_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_sign_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_sign_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_sign_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_sign_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_sign_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac* ctx, int cmock_size);
#define cf_cmac_sign_ReturnThruPtr_out(out) cf_cmac_sign_CMockReturnMemThruPtr_out(__LINE__, out, sizeof(*out))
#define cf_cmac_sign_ReturnArrayThruPtr_out(out, cmock_len) cf_cmac_sign_CMockReturnMemThruPtr_out(__LINE__, out, cmock_len * sizeof(*out))
#define cf_cmac_sign_ReturnMemThruPtr_out(out, cmock_size) cf_cmac_sign_CMockReturnMemThruPtr_out(__LINE__, out, cmock_size)
void cf_cmac_sign_CMockReturnMemThruPtr_out(UNITY_LINE_TYPE cmock_line, uint8_t* out, int cmock_size);
#define cf_cmac_sign_IgnoreArg_ctx() cf_cmac_sign_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_sign_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_sign_IgnoreArg_data() cf_cmac_sign_CMockIgnoreArg_data(__LINE__)
void cf_cmac_sign_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_sign_IgnoreArg_bytes() cf_cmac_sign_CMockIgnoreArg_bytes(__LINE__)
void cf_cmac_sign_CMockIgnoreArg_bytes(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_sign_IgnoreArg_out() cf_cmac_sign_CMockIgnoreArg_out(__LINE__)
void cf_cmac_sign_CMockIgnoreArg_out(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_init_Ignore() cf_cmac_stream_init_CMockIgnore()
void cf_cmac_stream_init_CMockIgnore(void);
#define cf_cmac_stream_init_Expect(ctx, prp, prpctx) cf_cmac_stream_init_CMockExpect(__LINE__, ctx, prp, prpctx)
void cf_cmac_stream_init_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, const cf_prp* prp, void* prpctx);
typedef void (* CMOCK_cf_cmac_stream_init_CALLBACK)(cf_cmac_stream* ctx, const cf_prp* prp, void* prpctx, int cmock_num_calls);
void cf_cmac_stream_init_StubWithCallback(CMOCK_cf_cmac_stream_init_CALLBACK Callback);
#define cf_cmac_stream_init_ExpectWithArray(ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth) cf_cmac_stream_init_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, prp, prp_Depth, prpctx, prpctx_Depth)
void cf_cmac_stream_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int ctx_Depth, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth);
#define cf_cmac_stream_init_ReturnThruPtr_ctx(ctx) cf_cmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_stream_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_stream_init_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_stream_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_stream_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int cmock_size);
#define cf_cmac_stream_init_ReturnThruPtr_prpctx(prpctx) cf_cmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_cmac_stream_init_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_cmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_cmac_stream_init_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_cmac_stream_init_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_cmac_stream_init_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_cmac_stream_init_IgnoreArg_ctx() cf_cmac_stream_init_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_stream_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_init_IgnoreArg_prp() cf_cmac_stream_init_CMockIgnoreArg_prp(__LINE__)
void cf_cmac_stream_init_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_init_IgnoreArg_prpctx() cf_cmac_stream_init_CMockIgnoreArg_prpctx(__LINE__)
void cf_cmac_stream_init_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_reset_Ignore() cf_cmac_stream_reset_CMockIgnore()
void cf_cmac_stream_reset_CMockIgnore(void);
#define cf_cmac_stream_reset_Expect(ctx) cf_cmac_stream_reset_CMockExpect(__LINE__, ctx)
void cf_cmac_stream_reset_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx);
typedef void (* CMOCK_cf_cmac_stream_reset_CALLBACK)(cf_cmac_stream* ctx, int cmock_num_calls);
void cf_cmac_stream_reset_StubWithCallback(CMOCK_cf_cmac_stream_reset_CALLBACK Callback);
#define cf_cmac_stream_reset_ExpectWithArray(ctx, ctx_Depth) cf_cmac_stream_reset_CMockExpectWithArray(__LINE__, ctx, ctx_Depth)
void cf_cmac_stream_reset_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int ctx_Depth);
#define cf_cmac_stream_reset_ReturnThruPtr_ctx(ctx) cf_cmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_stream_reset_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_stream_reset_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_stream_reset_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_stream_reset_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int cmock_size);
#define cf_cmac_stream_reset_IgnoreArg_ctx() cf_cmac_stream_reset_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_stream_reset_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_update_Ignore() cf_cmac_stream_update_CMockIgnore()
void cf_cmac_stream_update_CMockIgnore(void);
#define cf_cmac_stream_update_Expect(ctx, data, ndata, isfinal) cf_cmac_stream_update_CMockExpect(__LINE__, ctx, data, ndata, isfinal)
void cf_cmac_stream_update_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, const uint8_t* data, size_t ndata, int isfinal);
typedef void (* CMOCK_cf_cmac_stream_update_CALLBACK)(cf_cmac_stream* ctx, const uint8_t* data, size_t ndata, int isfinal, int cmock_num_calls);
void cf_cmac_stream_update_StubWithCallback(CMOCK_cf_cmac_stream_update_CALLBACK Callback);
#define cf_cmac_stream_update_ExpectWithArray(ctx, ctx_Depth, data, data_Depth, ndata, isfinal) cf_cmac_stream_update_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, data, data_Depth, ndata, isfinal)
void cf_cmac_stream_update_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int ctx_Depth, uint8_t* data, int data_Depth, size_t ndata, int isfinal);
#define cf_cmac_stream_update_ReturnThruPtr_ctx(ctx) cf_cmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_stream_update_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_stream_update_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_stream_update_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_stream_update_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int cmock_size);
#define cf_cmac_stream_update_IgnoreArg_ctx() cf_cmac_stream_update_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_stream_update_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_update_IgnoreArg_data() cf_cmac_stream_update_CMockIgnoreArg_data(__LINE__)
void cf_cmac_stream_update_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_update_IgnoreArg_ndata() cf_cmac_stream_update_CMockIgnoreArg_ndata(__LINE__)
void cf_cmac_stream_update_CMockIgnoreArg_ndata(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_update_IgnoreArg_isfinal() cf_cmac_stream_update_CMockIgnoreArg_isfinal(__LINE__)
void cf_cmac_stream_update_CMockIgnoreArg_isfinal(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_final_Ignore() cf_cmac_stream_final_CMockIgnore()
void cf_cmac_stream_final_CMockIgnore(void);
#define cf_cmac_stream_final_Expect(ctx, out) cf_cmac_stream_final_CMockExpect(__LINE__, ctx, out)
void cf_cmac_stream_final_CMockExpect(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, uint8_t* out);
typedef void (* CMOCK_cf_cmac_stream_final_CALLBACK)(cf_cmac_stream* ctx, uint8_t* out, int cmock_num_calls);
void cf_cmac_stream_final_StubWithCallback(CMOCK_cf_cmac_stream_final_CALLBACK Callback);
#define cf_cmac_stream_final_ExpectWithArray(ctx, ctx_Depth, out, out_Depth) cf_cmac_stream_final_CMockExpectWithArray(__LINE__, ctx, ctx_Depth, out, out_Depth)
void cf_cmac_stream_final_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int ctx_Depth, uint8_t* out, int out_Depth);
#define cf_cmac_stream_final_ReturnThruPtr_ctx(ctx) cf_cmac_stream_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_cmac_stream_final_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_cmac_stream_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_cmac_stream_final_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_cmac_stream_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_cmac_stream_final_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, cf_cmac_stream* ctx, int cmock_size);
#define cf_cmac_stream_final_ReturnThruPtr_out(out) cf_cmac_stream_final_CMockReturnMemThruPtr_out(__LINE__, out, sizeof(*out))
#define cf_cmac_stream_final_ReturnArrayThruPtr_out(out, cmock_len) cf_cmac_stream_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_len * sizeof(*out))
#define cf_cmac_stream_final_ReturnMemThruPtr_out(out, cmock_size) cf_cmac_stream_final_CMockReturnMemThruPtr_out(__LINE__, out, cmock_size)
void cf_cmac_stream_final_CMockReturnMemThruPtr_out(UNITY_LINE_TYPE cmock_line, uint8_t* out, int cmock_size);
#define cf_cmac_stream_final_IgnoreArg_ctx() cf_cmac_stream_final_CMockIgnoreArg_ctx(__LINE__)
void cf_cmac_stream_final_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_cmac_stream_final_IgnoreArg_out() cf_cmac_stream_final_CMockIgnoreArg_out(__LINE__)
void cf_cmac_stream_final_CMockIgnoreArg_out(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_Ignore() cf_eax_encrypt_CMockIgnore()
void cf_eax_encrypt_CMockIgnore(void);
#define cf_eax_encrypt_Expect(prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag) cf_eax_encrypt_CMockExpect(__LINE__, prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag)
void cf_eax_encrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag);
typedef void (* CMOCK_cf_eax_encrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag, int cmock_num_calls);
void cf_eax_encrypt_StubWithCallback(CMOCK_cf_eax_encrypt_CALLBACK Callback);
#define cf_eax_encrypt_ExpectWithArray(prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag) cf_eax_encrypt_CMockExpectWithArray(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag)
void cf_eax_encrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* plain, int plain_Depth, size_t nplain, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* cipher, int cipher_Depth, uint8_t* tag, int tag_Depth, size_t ntag);
#define cf_eax_encrypt_ReturnThruPtr_prpctx(prpctx) cf_eax_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_eax_encrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_eax_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_eax_encrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_eax_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_eax_encrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_eax_encrypt_ReturnThruPtr_cipher(cipher) cf_eax_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, sizeof(*cipher))
#define cf_eax_encrypt_ReturnArrayThruPtr_cipher(cipher, cmock_len) cf_eax_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_len * sizeof(*cipher))
#define cf_eax_encrypt_ReturnMemThruPtr_cipher(cipher, cmock_size) cf_eax_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_size)
void cf_eax_encrypt_CMockReturnMemThruPtr_cipher(UNITY_LINE_TYPE cmock_line, uint8_t* cipher, int cmock_size);
#define cf_eax_encrypt_ReturnThruPtr_tag(tag) cf_eax_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, sizeof(*tag))
#define cf_eax_encrypt_ReturnArrayThruPtr_tag(tag, cmock_len) cf_eax_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_len * sizeof(*tag))
#define cf_eax_encrypt_ReturnMemThruPtr_tag(tag, cmock_size) cf_eax_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_size)
void cf_eax_encrypt_CMockReturnMemThruPtr_tag(UNITY_LINE_TYPE cmock_line, uint8_t* tag, int cmock_size);
#define cf_eax_encrypt_IgnoreArg_prp() cf_eax_encrypt_CMockIgnoreArg_prp(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_prpctx() cf_eax_encrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_plain() cf_eax_encrypt_CMockIgnoreArg_plain(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_nplain() cf_eax_encrypt_CMockIgnoreArg_nplain(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_nplain(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_header() cf_eax_encrypt_CMockIgnoreArg_header(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_nheader() cf_eax_encrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_nonce() cf_eax_encrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_nnonce() cf_eax_encrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_cipher() cf_eax_encrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_tag() cf_eax_encrypt_CMockIgnoreArg_tag(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_eax_encrypt_IgnoreArg_ntag() cf_eax_encrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_eax_encrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreAndReturn(cmock_retval) cf_eax_decrypt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cf_eax_decrypt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define cf_eax_decrypt_ExpectAndReturn(prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval) cf_eax_decrypt_CMockExpectAndReturn(__LINE__, prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval)
void cf_eax_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_to_return);
typedef int (* CMOCK_cf_eax_decrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_num_calls);
void cf_eax_decrypt_StubWithCallback(CMOCK_cf_eax_decrypt_CALLBACK Callback);
#define cf_eax_decrypt_ExpectWithArrayAndReturn(prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval) cf_eax_decrypt_CMockExpectWithArrayAndReturn(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval)
void cf_eax_decrypt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* cipher, int cipher_Depth, size_t ncipher, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* tag, int tag_Depth, size_t ntag, uint8_t* plain, int plain_Depth, int cmock_to_return);
#define cf_eax_decrypt_ReturnThruPtr_prpctx(prpctx) cf_eax_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_eax_decrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_eax_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_eax_decrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_eax_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_eax_decrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_eax_decrypt_ReturnThruPtr_plain(plain) cf_eax_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, sizeof(*plain))
#define cf_eax_decrypt_ReturnArrayThruPtr_plain(plain, cmock_len) cf_eax_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_len * sizeof(*plain))
#define cf_eax_decrypt_ReturnMemThruPtr_plain(plain, cmock_size) cf_eax_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_size)
void cf_eax_decrypt_CMockReturnMemThruPtr_plain(UNITY_LINE_TYPE cmock_line, uint8_t* plain, int cmock_size);
#define cf_eax_decrypt_IgnoreArg_prp() cf_eax_decrypt_CMockIgnoreArg_prp(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_prpctx() cf_eax_decrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_cipher() cf_eax_decrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_ncipher() cf_eax_decrypt_CMockIgnoreArg_ncipher(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_ncipher(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_header() cf_eax_decrypt_CMockIgnoreArg_header(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_nheader() cf_eax_decrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_nonce() cf_eax_decrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_nnonce() cf_eax_decrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_tag() cf_eax_decrypt_CMockIgnoreArg_tag(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_ntag() cf_eax_decrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_eax_decrypt_IgnoreArg_plain() cf_eax_decrypt_CMockIgnoreArg_plain(__LINE__)
void cf_eax_decrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_Ignore() cf_gcm_encrypt_CMockIgnore()
void cf_gcm_encrypt_CMockIgnore(void);
#define cf_gcm_encrypt_Expect(prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag) cf_gcm_encrypt_CMockExpect(__LINE__, prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag)
void cf_gcm_encrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag);
typedef void (* CMOCK_cf_gcm_encrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag, int cmock_num_calls);
void cf_gcm_encrypt_StubWithCallback(CMOCK_cf_gcm_encrypt_CALLBACK Callback);
#define cf_gcm_encrypt_ExpectWithArray(prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag) cf_gcm_encrypt_CMockExpectWithArray(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag)
void cf_gcm_encrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* plain, int plain_Depth, size_t nplain, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* cipher, int cipher_Depth, uint8_t* tag, int tag_Depth, size_t ntag);
#define cf_gcm_encrypt_ReturnThruPtr_prpctx(prpctx) cf_gcm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_gcm_encrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_gcm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_gcm_encrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_gcm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_gcm_encrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_gcm_encrypt_ReturnThruPtr_cipher(cipher) cf_gcm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, sizeof(*cipher))
#define cf_gcm_encrypt_ReturnArrayThruPtr_cipher(cipher, cmock_len) cf_gcm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_len * sizeof(*cipher))
#define cf_gcm_encrypt_ReturnMemThruPtr_cipher(cipher, cmock_size) cf_gcm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_size)
void cf_gcm_encrypt_CMockReturnMemThruPtr_cipher(UNITY_LINE_TYPE cmock_line, uint8_t* cipher, int cmock_size);
#define cf_gcm_encrypt_ReturnThruPtr_tag(tag) cf_gcm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, sizeof(*tag))
#define cf_gcm_encrypt_ReturnArrayThruPtr_tag(tag, cmock_len) cf_gcm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_len * sizeof(*tag))
#define cf_gcm_encrypt_ReturnMemThruPtr_tag(tag, cmock_size) cf_gcm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_size)
void cf_gcm_encrypt_CMockReturnMemThruPtr_tag(UNITY_LINE_TYPE cmock_line, uint8_t* tag, int cmock_size);
#define cf_gcm_encrypt_IgnoreArg_prp() cf_gcm_encrypt_CMockIgnoreArg_prp(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_prpctx() cf_gcm_encrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_plain() cf_gcm_encrypt_CMockIgnoreArg_plain(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_nplain() cf_gcm_encrypt_CMockIgnoreArg_nplain(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_nplain(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_header() cf_gcm_encrypt_CMockIgnoreArg_header(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_nheader() cf_gcm_encrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_nonce() cf_gcm_encrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_nnonce() cf_gcm_encrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_cipher() cf_gcm_encrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_tag() cf_gcm_encrypt_CMockIgnoreArg_tag(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_encrypt_IgnoreArg_ntag() cf_gcm_encrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_gcm_encrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreAndReturn(cmock_retval) cf_gcm_decrypt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cf_gcm_decrypt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define cf_gcm_decrypt_ExpectAndReturn(prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval) cf_gcm_decrypt_CMockExpectAndReturn(__LINE__, prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval)
void cf_gcm_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_to_return);
typedef int (* CMOCK_cf_gcm_decrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_num_calls);
void cf_gcm_decrypt_StubWithCallback(CMOCK_cf_gcm_decrypt_CALLBACK Callback);
#define cf_gcm_decrypt_ExpectWithArrayAndReturn(prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval) cf_gcm_decrypt_CMockExpectWithArrayAndReturn(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval)
void cf_gcm_decrypt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* cipher, int cipher_Depth, size_t ncipher, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* tag, int tag_Depth, size_t ntag, uint8_t* plain, int plain_Depth, int cmock_to_return);
#define cf_gcm_decrypt_ReturnThruPtr_prpctx(prpctx) cf_gcm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_gcm_decrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_gcm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_gcm_decrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_gcm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_gcm_decrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_gcm_decrypt_ReturnThruPtr_plain(plain) cf_gcm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, sizeof(*plain))
#define cf_gcm_decrypt_ReturnArrayThruPtr_plain(plain, cmock_len) cf_gcm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_len * sizeof(*plain))
#define cf_gcm_decrypt_ReturnMemThruPtr_plain(plain, cmock_size) cf_gcm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_size)
void cf_gcm_decrypt_CMockReturnMemThruPtr_plain(UNITY_LINE_TYPE cmock_line, uint8_t* plain, int cmock_size);
#define cf_gcm_decrypt_IgnoreArg_prp() cf_gcm_decrypt_CMockIgnoreArg_prp(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_prpctx() cf_gcm_decrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_cipher() cf_gcm_decrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_ncipher() cf_gcm_decrypt_CMockIgnoreArg_ncipher(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_ncipher(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_header() cf_gcm_decrypt_CMockIgnoreArg_header(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_nheader() cf_gcm_decrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_nonce() cf_gcm_decrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_nnonce() cf_gcm_decrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_tag() cf_gcm_decrypt_CMockIgnoreArg_tag(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_ntag() cf_gcm_decrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_gcm_decrypt_IgnoreArg_plain() cf_gcm_decrypt_CMockIgnoreArg_plain(__LINE__)
void cf_gcm_decrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_Ignore() cf_ccm_encrypt_CMockIgnore()
void cf_ccm_encrypt_CMockIgnore(void);
#define cf_ccm_encrypt_Expect(prp, prpctx, plain, nplain, L, header, nheader, nonce, nnonce, cipher, tag, ntag) cf_ccm_encrypt_CMockExpect(__LINE__, prp, prpctx, plain, nplain, L, header, nheader, nonce, nnonce, cipher, tag, ntag)
void cf_ccm_encrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, size_t L, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag);
typedef void (* CMOCK_cf_ccm_encrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, size_t L, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag, int cmock_num_calls);
void cf_ccm_encrypt_StubWithCallback(CMOCK_cf_ccm_encrypt_CALLBACK Callback);
#define cf_ccm_encrypt_ExpectWithArray(prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, L, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag) cf_ccm_encrypt_CMockExpectWithArray(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, L, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag)
void cf_ccm_encrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* plain, int plain_Depth, size_t nplain, size_t L, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* cipher, int cipher_Depth, uint8_t* tag, int tag_Depth, size_t ntag);
#define cf_ccm_encrypt_ReturnThruPtr_prpctx(prpctx) cf_ccm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_ccm_encrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_ccm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_ccm_encrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_ccm_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_ccm_encrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_ccm_encrypt_ReturnThruPtr_cipher(cipher) cf_ccm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, sizeof(*cipher))
#define cf_ccm_encrypt_ReturnArrayThruPtr_cipher(cipher, cmock_len) cf_ccm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_len * sizeof(*cipher))
#define cf_ccm_encrypt_ReturnMemThruPtr_cipher(cipher, cmock_size) cf_ccm_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_size)
void cf_ccm_encrypt_CMockReturnMemThruPtr_cipher(UNITY_LINE_TYPE cmock_line, uint8_t* cipher, int cmock_size);
#define cf_ccm_encrypt_ReturnThruPtr_tag(tag) cf_ccm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, sizeof(*tag))
#define cf_ccm_encrypt_ReturnArrayThruPtr_tag(tag, cmock_len) cf_ccm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_len * sizeof(*tag))
#define cf_ccm_encrypt_ReturnMemThruPtr_tag(tag, cmock_size) cf_ccm_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_size)
void cf_ccm_encrypt_CMockReturnMemThruPtr_tag(UNITY_LINE_TYPE cmock_line, uint8_t* tag, int cmock_size);
#define cf_ccm_encrypt_IgnoreArg_prp() cf_ccm_encrypt_CMockIgnoreArg_prp(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_prpctx() cf_ccm_encrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_plain() cf_ccm_encrypt_CMockIgnoreArg_plain(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_nplain() cf_ccm_encrypt_CMockIgnoreArg_nplain(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_nplain(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_L() cf_ccm_encrypt_CMockIgnoreArg_L(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_L(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_header() cf_ccm_encrypt_CMockIgnoreArg_header(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_nheader() cf_ccm_encrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_nonce() cf_ccm_encrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_nnonce() cf_ccm_encrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_cipher() cf_ccm_encrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_tag() cf_ccm_encrypt_CMockIgnoreArg_tag(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_encrypt_IgnoreArg_ntag() cf_ccm_encrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_ccm_encrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreAndReturn(cmock_retval) cf_ccm_decrypt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cf_ccm_decrypt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define cf_ccm_decrypt_ExpectAndReturn(prp, prpctx, cipher, ncipher, L, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval) cf_ccm_decrypt_CMockExpectAndReturn(__LINE__, prp, prpctx, cipher, ncipher, L, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval)
void cf_ccm_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, size_t L, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_to_return);
typedef int (* CMOCK_cf_ccm_decrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, size_t L, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_num_calls);
void cf_ccm_decrypt_StubWithCallback(CMOCK_cf_ccm_decrypt_CALLBACK Callback);
#define cf_ccm_decrypt_ExpectWithArrayAndReturn(prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, L, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval) cf_ccm_decrypt_CMockExpectWithArrayAndReturn(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, L, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval)
void cf_ccm_decrypt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* cipher, int cipher_Depth, size_t ncipher, size_t L, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* tag, int tag_Depth, size_t ntag, uint8_t* plain, int plain_Depth, int cmock_to_return);
#define cf_ccm_decrypt_ReturnThruPtr_prpctx(prpctx) cf_ccm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_ccm_decrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_ccm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_ccm_decrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_ccm_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_ccm_decrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_ccm_decrypt_ReturnThruPtr_plain(plain) cf_ccm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, sizeof(*plain))
#define cf_ccm_decrypt_ReturnArrayThruPtr_plain(plain, cmock_len) cf_ccm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_len * sizeof(*plain))
#define cf_ccm_decrypt_ReturnMemThruPtr_plain(plain, cmock_size) cf_ccm_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_size)
void cf_ccm_decrypt_CMockReturnMemThruPtr_plain(UNITY_LINE_TYPE cmock_line, uint8_t* plain, int cmock_size);
#define cf_ccm_decrypt_IgnoreArg_prp() cf_ccm_decrypt_CMockIgnoreArg_prp(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_prpctx() cf_ccm_decrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_cipher() cf_ccm_decrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_ncipher() cf_ccm_decrypt_CMockIgnoreArg_ncipher(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_ncipher(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_L() cf_ccm_decrypt_CMockIgnoreArg_L(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_L(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_header() cf_ccm_decrypt_CMockIgnoreArg_header(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_nheader() cf_ccm_decrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_nonce() cf_ccm_decrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_nnonce() cf_ccm_decrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_tag() cf_ccm_decrypt_CMockIgnoreArg_tag(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_ntag() cf_ccm_decrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_ccm_decrypt_IgnoreArg_plain() cf_ccm_decrypt_CMockIgnoreArg_plain(__LINE__)
void cf_ccm_decrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_Ignore() cf_ocb_encrypt_CMockIgnore()
void cf_ocb_encrypt_CMockIgnore(void);
#define cf_ocb_encrypt_Expect(prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag) cf_ocb_encrypt_CMockExpect(__LINE__, prp, prpctx, plain, nplain, header, nheader, nonce, nnonce, cipher, tag, ntag)
void cf_ocb_encrypt_CMockExpect(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag);
typedef void (* CMOCK_cf_ocb_encrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* plain, size_t nplain, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, uint8_t* cipher, uint8_t* tag, size_t ntag, int cmock_num_calls);
void cf_ocb_encrypt_StubWithCallback(CMOCK_cf_ocb_encrypt_CALLBACK Callback);
#define cf_ocb_encrypt_ExpectWithArray(prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag) cf_ocb_encrypt_CMockExpectWithArray(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, plain, plain_Depth, nplain, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, cipher, cipher_Depth, tag, tag_Depth, ntag)
void cf_ocb_encrypt_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* plain, int plain_Depth, size_t nplain, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* cipher, int cipher_Depth, uint8_t* tag, int tag_Depth, size_t ntag);
#define cf_ocb_encrypt_ReturnThruPtr_prpctx(prpctx) cf_ocb_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_ocb_encrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_ocb_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_ocb_encrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_ocb_encrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_ocb_encrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_ocb_encrypt_ReturnThruPtr_cipher(cipher) cf_ocb_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, sizeof(*cipher))
#define cf_ocb_encrypt_ReturnArrayThruPtr_cipher(cipher, cmock_len) cf_ocb_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_len * sizeof(*cipher))
#define cf_ocb_encrypt_ReturnMemThruPtr_cipher(cipher, cmock_size) cf_ocb_encrypt_CMockReturnMemThruPtr_cipher(__LINE__, cipher, cmock_size)
void cf_ocb_encrypt_CMockReturnMemThruPtr_cipher(UNITY_LINE_TYPE cmock_line, uint8_t* cipher, int cmock_size);
#define cf_ocb_encrypt_ReturnThruPtr_tag(tag) cf_ocb_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, sizeof(*tag))
#define cf_ocb_encrypt_ReturnArrayThruPtr_tag(tag, cmock_len) cf_ocb_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_len * sizeof(*tag))
#define cf_ocb_encrypt_ReturnMemThruPtr_tag(tag, cmock_size) cf_ocb_encrypt_CMockReturnMemThruPtr_tag(__LINE__, tag, cmock_size)
void cf_ocb_encrypt_CMockReturnMemThruPtr_tag(UNITY_LINE_TYPE cmock_line, uint8_t* tag, int cmock_size);
#define cf_ocb_encrypt_IgnoreArg_prp() cf_ocb_encrypt_CMockIgnoreArg_prp(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_prpctx() cf_ocb_encrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_plain() cf_ocb_encrypt_CMockIgnoreArg_plain(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_nplain() cf_ocb_encrypt_CMockIgnoreArg_nplain(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_nplain(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_header() cf_ocb_encrypt_CMockIgnoreArg_header(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_nheader() cf_ocb_encrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_nonce() cf_ocb_encrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_nnonce() cf_ocb_encrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_cipher() cf_ocb_encrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_tag() cf_ocb_encrypt_CMockIgnoreArg_tag(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_encrypt_IgnoreArg_ntag() cf_ocb_encrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_ocb_encrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreAndReturn(cmock_retval) cf_ocb_decrypt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cf_ocb_decrypt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define cf_ocb_decrypt_ExpectAndReturn(prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval) cf_ocb_decrypt_CMockExpectAndReturn(__LINE__, prp, prpctx, cipher, ncipher, header, nheader, nonce, nnonce, tag, ntag, plain, cmock_retval)
void cf_ocb_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_to_return);
typedef int (* CMOCK_cf_ocb_decrypt_CALLBACK)(const cf_prp* prp, void* prpctx, const uint8_t* cipher, size_t ncipher, const uint8_t* header, size_t nheader, const uint8_t* nonce, size_t nnonce, const uint8_t* tag, size_t ntag, uint8_t* plain, int cmock_num_calls);
void cf_ocb_decrypt_StubWithCallback(CMOCK_cf_ocb_decrypt_CALLBACK Callback);
#define cf_ocb_decrypt_ExpectWithArrayAndReturn(prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval) cf_ocb_decrypt_CMockExpectWithArrayAndReturn(__LINE__, prp, prp_Depth, prpctx, prpctx_Depth, cipher, cipher_Depth, ncipher, header, header_Depth, nheader, nonce, nonce_Depth, nnonce, tag, tag_Depth, ntag, plain, plain_Depth, cmock_retval)
void cf_ocb_decrypt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cf_prp* prp, int prp_Depth, void* prpctx, int prpctx_Depth, uint8_t* cipher, int cipher_Depth, size_t ncipher, uint8_t* header, int header_Depth, size_t nheader, uint8_t* nonce, int nonce_Depth, size_t nnonce, uint8_t* tag, int tag_Depth, size_t ntag, uint8_t* plain, int plain_Depth, int cmock_to_return);
#define cf_ocb_decrypt_ReturnThruPtr_prpctx(prpctx) cf_ocb_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, sizeof(*prpctx))
#define cf_ocb_decrypt_ReturnArrayThruPtr_prpctx(prpctx, cmock_len) cf_ocb_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_len * sizeof(*prpctx))
#define cf_ocb_decrypt_ReturnMemThruPtr_prpctx(prpctx, cmock_size) cf_ocb_decrypt_CMockReturnMemThruPtr_prpctx(__LINE__, prpctx, cmock_size)
void cf_ocb_decrypt_CMockReturnMemThruPtr_prpctx(UNITY_LINE_TYPE cmock_line, void* prpctx, int cmock_size);
#define cf_ocb_decrypt_ReturnThruPtr_plain(plain) cf_ocb_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, sizeof(*plain))
#define cf_ocb_decrypt_ReturnArrayThruPtr_plain(plain, cmock_len) cf_ocb_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_len * sizeof(*plain))
#define cf_ocb_decrypt_ReturnMemThruPtr_plain(plain, cmock_size) cf_ocb_decrypt_CMockReturnMemThruPtr_plain(__LINE__, plain, cmock_size)
void cf_ocb_decrypt_CMockReturnMemThruPtr_plain(UNITY_LINE_TYPE cmock_line, uint8_t* plain, int cmock_size);
#define cf_ocb_decrypt_IgnoreArg_prp() cf_ocb_decrypt_CMockIgnoreArg_prp(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_prp(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_prpctx() cf_ocb_decrypt_CMockIgnoreArg_prpctx(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_prpctx(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_cipher() cf_ocb_decrypt_CMockIgnoreArg_cipher(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_cipher(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_ncipher() cf_ocb_decrypt_CMockIgnoreArg_ncipher(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_ncipher(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_header() cf_ocb_decrypt_CMockIgnoreArg_header(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_header(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_nheader() cf_ocb_decrypt_CMockIgnoreArg_nheader(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_nheader(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_nonce() cf_ocb_decrypt_CMockIgnoreArg_nonce(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_nonce(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_nnonce() cf_ocb_decrypt_CMockIgnoreArg_nnonce(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_nnonce(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_tag() cf_ocb_decrypt_CMockIgnoreArg_tag(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_tag(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_ntag() cf_ocb_decrypt_CMockIgnoreArg_ntag(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_ntag(UNITY_LINE_TYPE cmock_line);
#define cf_ocb_decrypt_IgnoreArg_plain() cf_ocb_decrypt_CMockIgnoreArg_plain(__LINE__)
void cf_ocb_decrypt_CMockIgnoreArg_plain(UNITY_LINE_TYPE cmock_line);

#endif
