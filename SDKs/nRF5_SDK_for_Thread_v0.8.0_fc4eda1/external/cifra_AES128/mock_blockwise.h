/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BLOCKWISE_H
#define _MOCK_BLOCKWISE_H

#ifndef __STATIC_INLINE
#define __STATIC_INLINE
#else
#undef __STATIC_INLINE
#define __STATIC_INLINE
#endif
#define SUPPRESS_INLINE_IMPLEMENTATION

#include "blockwise.h"
#undef SUPPRESS_INLINE_IMPLEMENTATION
#undef __STATIC_INLINE
#define __STATIC_INLINE __STATIC_INLINE1

void mock_blockwise_Init(void);
void mock_blockwise_Destroy(void);
void mock_blockwise_Verify(void);




#define cf_blockwise_accumulate_Ignore() cf_blockwise_accumulate_CMockIgnore()
void cf_blockwise_accumulate_CMockIgnore(void);
#define cf_blockwise_accumulate_Expect(partial, npartial, nblock, input, nbytes, process, ctx) cf_blockwise_accumulate_CMockExpect(__LINE__, partial, npartial, nblock, input, nbytes, process, ctx)
void cf_blockwise_accumulate_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* partial, size_t* npartial, size_t nblock, const void* input, size_t nbytes, cf_blockwise_in_fn process, void* ctx);
typedef void (* CMOCK_cf_blockwise_accumulate_CALLBACK)(uint8_t* partial, size_t* npartial, size_t nblock, const void* input, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int cmock_num_calls);
void cf_blockwise_accumulate_StubWithCallback(CMOCK_cf_blockwise_accumulate_CALLBACK Callback);
#define cf_blockwise_accumulate_ExpectWithArray(partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, nbytes, process, ctx, ctx_Depth) cf_blockwise_accumulate_CMockExpectWithArray(__LINE__, partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, nbytes, process, ctx, ctx_Depth)
void cf_blockwise_accumulate_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int partial_Depth, size_t* npartial, int npartial_Depth, size_t nblock, void* input, int input_Depth, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int ctx_Depth);
#define cf_blockwise_accumulate_ReturnThruPtr_partial(partial) cf_blockwise_accumulate_CMockReturnMemThruPtr_partial(__LINE__, partial, sizeof(*partial))
#define cf_blockwise_accumulate_ReturnArrayThruPtr_partial(partial, cmock_len) cf_blockwise_accumulate_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_len * sizeof(*partial))
#define cf_blockwise_accumulate_ReturnMemThruPtr_partial(partial, cmock_size) cf_blockwise_accumulate_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_size)
void cf_blockwise_accumulate_CMockReturnMemThruPtr_partial(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int cmock_size);
#define cf_blockwise_accumulate_ReturnThruPtr_npartial(npartial) cf_blockwise_accumulate_CMockReturnMemThruPtr_npartial(__LINE__, npartial, sizeof(*npartial))
#define cf_blockwise_accumulate_ReturnArrayThruPtr_npartial(npartial, cmock_len) cf_blockwise_accumulate_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_len * sizeof(*npartial))
#define cf_blockwise_accumulate_ReturnMemThruPtr_npartial(npartial, cmock_size) cf_blockwise_accumulate_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_size)
void cf_blockwise_accumulate_CMockReturnMemThruPtr_npartial(UNITY_LINE_TYPE cmock_line, size_t* npartial, int cmock_size);
#define cf_blockwise_accumulate_ReturnThruPtr_ctx(ctx) cf_blockwise_accumulate_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_blockwise_accumulate_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_blockwise_accumulate_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_blockwise_accumulate_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_blockwise_accumulate_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_blockwise_accumulate_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, void* ctx, int cmock_size);
#define cf_blockwise_accumulate_IgnoreArg_partial() cf_blockwise_accumulate_CMockIgnoreArg_partial(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_partial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_npartial() cf_blockwise_accumulate_CMockIgnoreArg_npartial(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_npartial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_nblock() cf_blockwise_accumulate_CMockIgnoreArg_nblock(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_nblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_input() cf_blockwise_accumulate_CMockIgnoreArg_input(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_nbytes() cf_blockwise_accumulate_CMockIgnoreArg_nbytes(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_nbytes(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_process() cf_blockwise_accumulate_CMockIgnoreArg_process(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_process(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_IgnoreArg_ctx() cf_blockwise_accumulate_CMockIgnoreArg_ctx(__LINE__)
void cf_blockwise_accumulate_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_Ignore() cf_blockwise_accumulate_final_CMockIgnore()
void cf_blockwise_accumulate_final_CMockIgnore(void);
#define cf_blockwise_accumulate_final_Expect(partial, npartial, nblock, input, nbytes, process, process_final, ctx) cf_blockwise_accumulate_final_CMockExpect(__LINE__, partial, npartial, nblock, input, nbytes, process, process_final, ctx)
void cf_blockwise_accumulate_final_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* partial, size_t* npartial, size_t nblock, const void* input, size_t nbytes, cf_blockwise_in_fn process, cf_blockwise_in_fn process_final, void* ctx);
typedef void (* CMOCK_cf_blockwise_accumulate_final_CALLBACK)(uint8_t* partial, size_t* npartial, size_t nblock, const void* input, size_t nbytes, cf_blockwise_in_fn process, cf_blockwise_in_fn process_final, void* ctx, int cmock_num_calls);
void cf_blockwise_accumulate_final_StubWithCallback(CMOCK_cf_blockwise_accumulate_final_CALLBACK Callback);
#define cf_blockwise_accumulate_final_ExpectWithArray(partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, nbytes, process, process_final, ctx, ctx_Depth) cf_blockwise_accumulate_final_CMockExpectWithArray(__LINE__, partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, nbytes, process, process_final, ctx, ctx_Depth)
void cf_blockwise_accumulate_final_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int partial_Depth, size_t* npartial, int npartial_Depth, size_t nblock, void* input, int input_Depth, size_t nbytes, cf_blockwise_in_fn process, cf_blockwise_in_fn process_final, void* ctx, int ctx_Depth);
#define cf_blockwise_accumulate_final_ReturnThruPtr_partial(partial) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_partial(__LINE__, partial, sizeof(*partial))
#define cf_blockwise_accumulate_final_ReturnArrayThruPtr_partial(partial, cmock_len) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_len * sizeof(*partial))
#define cf_blockwise_accumulate_final_ReturnMemThruPtr_partial(partial, cmock_size) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_size)
void cf_blockwise_accumulate_final_CMockReturnMemThruPtr_partial(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int cmock_size);
#define cf_blockwise_accumulate_final_ReturnThruPtr_npartial(npartial) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_npartial(__LINE__, npartial, sizeof(*npartial))
#define cf_blockwise_accumulate_final_ReturnArrayThruPtr_npartial(npartial, cmock_len) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_len * sizeof(*npartial))
#define cf_blockwise_accumulate_final_ReturnMemThruPtr_npartial(npartial, cmock_size) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_size)
void cf_blockwise_accumulate_final_CMockReturnMemThruPtr_npartial(UNITY_LINE_TYPE cmock_line, size_t* npartial, int cmock_size);
#define cf_blockwise_accumulate_final_ReturnThruPtr_ctx(ctx) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_blockwise_accumulate_final_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_blockwise_accumulate_final_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_blockwise_accumulate_final_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_blockwise_accumulate_final_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, void* ctx, int cmock_size);
#define cf_blockwise_accumulate_final_IgnoreArg_partial() cf_blockwise_accumulate_final_CMockIgnoreArg_partial(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_partial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_npartial() cf_blockwise_accumulate_final_CMockIgnoreArg_npartial(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_npartial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_nblock() cf_blockwise_accumulate_final_CMockIgnoreArg_nblock(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_nblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_input() cf_blockwise_accumulate_final_CMockIgnoreArg_input(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_nbytes() cf_blockwise_accumulate_final_CMockIgnoreArg_nbytes(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_nbytes(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_process() cf_blockwise_accumulate_final_CMockIgnoreArg_process(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_process(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_process_final() cf_blockwise_accumulate_final_CMockIgnoreArg_process_final(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_process_final(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_accumulate_final_IgnoreArg_ctx() cf_blockwise_accumulate_final_CMockIgnoreArg_ctx(__LINE__)
void cf_blockwise_accumulate_final_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_Ignore() cf_blockwise_xor_CMockIgnore()
void cf_blockwise_xor_CMockIgnore(void);
#define cf_blockwise_xor_Expect(partial, npartial, nblock, input, output, nbytes, newblock, ctx) cf_blockwise_xor_CMockExpect(__LINE__, partial, npartial, nblock, input, output, nbytes, newblock, ctx)
void cf_blockwise_xor_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* partial, size_t* npartial, size_t nblock, const void* input, void* output, size_t nbytes, cf_blockwise_out_fn newblock, void* ctx);
typedef void (* CMOCK_cf_blockwise_xor_CALLBACK)(uint8_t* partial, size_t* npartial, size_t nblock, const void* input, void* output, size_t nbytes, cf_blockwise_out_fn newblock, void* ctx, int cmock_num_calls);
void cf_blockwise_xor_StubWithCallback(CMOCK_cf_blockwise_xor_CALLBACK Callback);
#define cf_blockwise_xor_ExpectWithArray(partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, output, output_Depth, nbytes, newblock, ctx, ctx_Depth) cf_blockwise_xor_CMockExpectWithArray(__LINE__, partial, partial_Depth, npartial, npartial_Depth, nblock, input, input_Depth, output, output_Depth, nbytes, newblock, ctx, ctx_Depth)
void cf_blockwise_xor_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int partial_Depth, size_t* npartial, int npartial_Depth, size_t nblock, void* input, int input_Depth, void* output, int output_Depth, size_t nbytes, cf_blockwise_out_fn newblock, void* ctx, int ctx_Depth);
#define cf_blockwise_xor_ReturnThruPtr_partial(partial) cf_blockwise_xor_CMockReturnMemThruPtr_partial(__LINE__, partial, sizeof(*partial))
#define cf_blockwise_xor_ReturnArrayThruPtr_partial(partial, cmock_len) cf_blockwise_xor_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_len * sizeof(*partial))
#define cf_blockwise_xor_ReturnMemThruPtr_partial(partial, cmock_size) cf_blockwise_xor_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_size)
void cf_blockwise_xor_CMockReturnMemThruPtr_partial(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int cmock_size);
#define cf_blockwise_xor_ReturnThruPtr_npartial(npartial) cf_blockwise_xor_CMockReturnMemThruPtr_npartial(__LINE__, npartial, sizeof(*npartial))
#define cf_blockwise_xor_ReturnArrayThruPtr_npartial(npartial, cmock_len) cf_blockwise_xor_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_len * sizeof(*npartial))
#define cf_blockwise_xor_ReturnMemThruPtr_npartial(npartial, cmock_size) cf_blockwise_xor_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_size)
void cf_blockwise_xor_CMockReturnMemThruPtr_npartial(UNITY_LINE_TYPE cmock_line, size_t* npartial, int cmock_size);
#define cf_blockwise_xor_ReturnThruPtr_output(output) cf_blockwise_xor_CMockReturnMemThruPtr_output(__LINE__, output, sizeof(*output))
#define cf_blockwise_xor_ReturnArrayThruPtr_output(output, cmock_len) cf_blockwise_xor_CMockReturnMemThruPtr_output(__LINE__, output, cmock_len * sizeof(*output))
#define cf_blockwise_xor_ReturnMemThruPtr_output(output, cmock_size) cf_blockwise_xor_CMockReturnMemThruPtr_output(__LINE__, output, cmock_size)
void cf_blockwise_xor_CMockReturnMemThruPtr_output(UNITY_LINE_TYPE cmock_line, void* output, int cmock_size);
#define cf_blockwise_xor_ReturnThruPtr_ctx(ctx) cf_blockwise_xor_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_blockwise_xor_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_blockwise_xor_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_blockwise_xor_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_blockwise_xor_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_blockwise_xor_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, void* ctx, int cmock_size);
#define cf_blockwise_xor_IgnoreArg_partial() cf_blockwise_xor_CMockIgnoreArg_partial(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_partial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_npartial() cf_blockwise_xor_CMockIgnoreArg_npartial(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_npartial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_nblock() cf_blockwise_xor_CMockIgnoreArg_nblock(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_nblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_input() cf_blockwise_xor_CMockIgnoreArg_input(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_output() cf_blockwise_xor_CMockIgnoreArg_output(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_output(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_nbytes() cf_blockwise_xor_CMockIgnoreArg_nbytes(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_nbytes(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_newblock() cf_blockwise_xor_CMockIgnoreArg_newblock(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_newblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_xor_IgnoreArg_ctx() cf_blockwise_xor_CMockIgnoreArg_ctx(__LINE__)
void cf_blockwise_xor_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_Ignore() cf_blockwise_acc_byte_CMockIgnore()
void cf_blockwise_acc_byte_CMockIgnore(void);
#define cf_blockwise_acc_byte_Expect(partial, npartial, nblock, byte, nbytes, process, ctx) cf_blockwise_acc_byte_CMockExpect(__LINE__, partial, npartial, nblock, byte, nbytes, process, ctx)
void cf_blockwise_acc_byte_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* partial, size_t* npartial, size_t nblock, uint8_t byte, size_t nbytes, cf_blockwise_in_fn process, void* ctx);
typedef void (* CMOCK_cf_blockwise_acc_byte_CALLBACK)(uint8_t* partial, size_t* npartial, size_t nblock, uint8_t byte, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int cmock_num_calls);
void cf_blockwise_acc_byte_StubWithCallback(CMOCK_cf_blockwise_acc_byte_CALLBACK Callback);
#define cf_blockwise_acc_byte_ExpectWithArray(partial, partial_Depth, npartial, npartial_Depth, nblock, byte, nbytes, process, ctx, ctx_Depth) cf_blockwise_acc_byte_CMockExpectWithArray(__LINE__, partial, partial_Depth, npartial, npartial_Depth, nblock, byte, nbytes, process, ctx, ctx_Depth)
void cf_blockwise_acc_byte_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int partial_Depth, size_t* npartial, int npartial_Depth, size_t nblock, uint8_t byte, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int ctx_Depth);
#define cf_blockwise_acc_byte_ReturnThruPtr_partial(partial) cf_blockwise_acc_byte_CMockReturnMemThruPtr_partial(__LINE__, partial, sizeof(*partial))
#define cf_blockwise_acc_byte_ReturnArrayThruPtr_partial(partial, cmock_len) cf_blockwise_acc_byte_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_len * sizeof(*partial))
#define cf_blockwise_acc_byte_ReturnMemThruPtr_partial(partial, cmock_size) cf_blockwise_acc_byte_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_size)
void cf_blockwise_acc_byte_CMockReturnMemThruPtr_partial(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int cmock_size);
#define cf_blockwise_acc_byte_ReturnThruPtr_npartial(npartial) cf_blockwise_acc_byte_CMockReturnMemThruPtr_npartial(__LINE__, npartial, sizeof(*npartial))
#define cf_blockwise_acc_byte_ReturnArrayThruPtr_npartial(npartial, cmock_len) cf_blockwise_acc_byte_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_len * sizeof(*npartial))
#define cf_blockwise_acc_byte_ReturnMemThruPtr_npartial(npartial, cmock_size) cf_blockwise_acc_byte_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_size)
void cf_blockwise_acc_byte_CMockReturnMemThruPtr_npartial(UNITY_LINE_TYPE cmock_line, size_t* npartial, int cmock_size);
#define cf_blockwise_acc_byte_ReturnThruPtr_ctx(ctx) cf_blockwise_acc_byte_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_blockwise_acc_byte_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_blockwise_acc_byte_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_blockwise_acc_byte_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_blockwise_acc_byte_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_blockwise_acc_byte_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, void* ctx, int cmock_size);
#define cf_blockwise_acc_byte_IgnoreArg_partial() cf_blockwise_acc_byte_CMockIgnoreArg_partial(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_partial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_npartial() cf_blockwise_acc_byte_CMockIgnoreArg_npartial(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_npartial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_nblock() cf_blockwise_acc_byte_CMockIgnoreArg_nblock(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_nblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_byte() cf_blockwise_acc_byte_CMockIgnoreArg_byte(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_byte(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_nbytes() cf_blockwise_acc_byte_CMockIgnoreArg_nbytes(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_nbytes(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_process() cf_blockwise_acc_byte_CMockIgnoreArg_process(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_process(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_byte_IgnoreArg_ctx() cf_blockwise_acc_byte_CMockIgnoreArg_ctx(__LINE__)
void cf_blockwise_acc_byte_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_Ignore() cf_blockwise_acc_pad_CMockIgnore()
void cf_blockwise_acc_pad_CMockIgnore(void);
#define cf_blockwise_acc_pad_Expect(partial, npartial, nblock, fbyte, mbyte, lbyte, nbytes, process, ctx) cf_blockwise_acc_pad_CMockExpect(__LINE__, partial, npartial, nblock, fbyte, mbyte, lbyte, nbytes, process, ctx)
void cf_blockwise_acc_pad_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* partial, size_t* npartial, size_t nblock, uint8_t fbyte, uint8_t mbyte, uint8_t lbyte, size_t nbytes, cf_blockwise_in_fn process, void* ctx);
typedef void (* CMOCK_cf_blockwise_acc_pad_CALLBACK)(uint8_t* partial, size_t* npartial, size_t nblock, uint8_t fbyte, uint8_t mbyte, uint8_t lbyte, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int cmock_num_calls);
void cf_blockwise_acc_pad_StubWithCallback(CMOCK_cf_blockwise_acc_pad_CALLBACK Callback);
#define cf_blockwise_acc_pad_ExpectWithArray(partial, partial_Depth, npartial, npartial_Depth, nblock, fbyte, mbyte, lbyte, nbytes, process, ctx, ctx_Depth) cf_blockwise_acc_pad_CMockExpectWithArray(__LINE__, partial, partial_Depth, npartial, npartial_Depth, nblock, fbyte, mbyte, lbyte, nbytes, process, ctx, ctx_Depth)
void cf_blockwise_acc_pad_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int partial_Depth, size_t* npartial, int npartial_Depth, size_t nblock, uint8_t fbyte, uint8_t mbyte, uint8_t lbyte, size_t nbytes, cf_blockwise_in_fn process, void* ctx, int ctx_Depth);
#define cf_blockwise_acc_pad_ReturnThruPtr_partial(partial) cf_blockwise_acc_pad_CMockReturnMemThruPtr_partial(__LINE__, partial, sizeof(*partial))
#define cf_blockwise_acc_pad_ReturnArrayThruPtr_partial(partial, cmock_len) cf_blockwise_acc_pad_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_len * sizeof(*partial))
#define cf_blockwise_acc_pad_ReturnMemThruPtr_partial(partial, cmock_size) cf_blockwise_acc_pad_CMockReturnMemThruPtr_partial(__LINE__, partial, cmock_size)
void cf_blockwise_acc_pad_CMockReturnMemThruPtr_partial(UNITY_LINE_TYPE cmock_line, uint8_t* partial, int cmock_size);
#define cf_blockwise_acc_pad_ReturnThruPtr_npartial(npartial) cf_blockwise_acc_pad_CMockReturnMemThruPtr_npartial(__LINE__, npartial, sizeof(*npartial))
#define cf_blockwise_acc_pad_ReturnArrayThruPtr_npartial(npartial, cmock_len) cf_blockwise_acc_pad_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_len * sizeof(*npartial))
#define cf_blockwise_acc_pad_ReturnMemThruPtr_npartial(npartial, cmock_size) cf_blockwise_acc_pad_CMockReturnMemThruPtr_npartial(__LINE__, npartial, cmock_size)
void cf_blockwise_acc_pad_CMockReturnMemThruPtr_npartial(UNITY_LINE_TYPE cmock_line, size_t* npartial, int cmock_size);
#define cf_blockwise_acc_pad_ReturnThruPtr_ctx(ctx) cf_blockwise_acc_pad_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(*ctx))
#define cf_blockwise_acc_pad_ReturnArrayThruPtr_ctx(ctx, cmock_len) cf_blockwise_acc_pad_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define cf_blockwise_acc_pad_ReturnMemThruPtr_ctx(ctx, cmock_size) cf_blockwise_acc_pad_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void cf_blockwise_acc_pad_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, void* ctx, int cmock_size);
#define cf_blockwise_acc_pad_IgnoreArg_partial() cf_blockwise_acc_pad_CMockIgnoreArg_partial(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_partial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_npartial() cf_blockwise_acc_pad_CMockIgnoreArg_npartial(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_npartial(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_nblock() cf_blockwise_acc_pad_CMockIgnoreArg_nblock(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_nblock(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_fbyte() cf_blockwise_acc_pad_CMockIgnoreArg_fbyte(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_fbyte(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_mbyte() cf_blockwise_acc_pad_CMockIgnoreArg_mbyte(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_mbyte(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_lbyte() cf_blockwise_acc_pad_CMockIgnoreArg_lbyte(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_lbyte(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_nbytes() cf_blockwise_acc_pad_CMockIgnoreArg_nbytes(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_nbytes(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_process() cf_blockwise_acc_pad_CMockIgnoreArg_process(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_process(UNITY_LINE_TYPE cmock_line);
#define cf_blockwise_acc_pad_IgnoreArg_ctx() cf_blockwise_acc_pad_CMockIgnoreArg_ctx(__LINE__)
void cf_blockwise_acc_pad_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);

#endif
